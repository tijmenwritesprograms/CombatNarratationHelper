@page "/"
@using CombatNarratationHelper.Models
@using CombatNarratationHelper.Services
@inject StatblockParserService ParserService
@rendermode InteractiveServer

<PageTitle>D&D Monster Statblock Parser</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">D&D Monster Statblock Parser</h1>
            <p class="text-muted">Paste a D&D monster statblock below and click "Parse Statblock" to convert it to structured data.</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Input Statblock</h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="statblockInput" class="form-label">Paste Monster Statblock:</label>
                        <textarea @bind="statblockText" 
                                  @bind:event="oninput"
                                  id="statblockInput" 
                                  class="form-control" 
                                  rows="20" 
                                  placeholder="Paste your D&D monster statblock here...

Example:
Adult Red Dragon
Huge dragon, chaotic evil
Armor Class 19 (natural armor)
Hit Points 256 (19d12 + 133)
Speed 40 ft., climb 40 ft., fly 80 ft.
STR 27 (+8) DEX 10 (+0) CON 25 (+7) INT 16 (+3) WIS 13 (+1) CHA 21 (+5)
Saving Throws Dex +6, Con +13, Wis +7, Cha +11
Skills Perception +13, Stealth +6
Damage Immunities fire
Senses blindsight 60 ft., darkvision 120 ft., passive Perception 23
Languages Common, Draconic
Challenge 17 (18,000 XP)"></textarea>
                    </div>
                    <div class="d-grid">
                        <button @onclick="ParseStatblock" 
                                class="btn btn-primary" 
                                disabled="@string.IsNullOrWhiteSpace(statblockText)">
                            <i class="fas fa-magic me-2"></i>Parse Statblock
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Parsed Data</h3>
                </div>
                <div class="card-body">
                    @if (parsedMonster != null)
                    {
                        <div class="parsed-monster">
                            <div class="mb-3">
                                <h4 class="text-primary">@parsedMonster.Name</h4>
                                <p class="text-muted">@parsedMonster.Size @parsedMonster.Type, @parsedMonster.Alignment</p>
                            </div>

                            <div class="row mb-3">
                                <div class="col-sm-4">
                                    <strong>Armor Class:</strong><br>
                                    @parsedMonster.ArmorClass @(!string.IsNullOrEmpty(parsedMonster.ArmorClassDescription) ? $"({parsedMonster.ArmorClassDescription})" : "")
                                </div>
                                <div class="col-sm-4">
                                    <strong>Hit Points:</strong><br>
                                    @parsedMonster.HitPoints @(!string.IsNullOrEmpty(parsedMonster.HitDice) ? $"({parsedMonster.HitDice})" : "")
                                </div>
                                <div class="col-sm-4">
                                    <strong>Speed:</strong><br>
                                    @(!string.IsNullOrEmpty(parsedMonster.SpeedDescription) ? parsedMonster.SpeedDescription : $"{parsedMonster.Speed} ft.")
                                </div>
                            </div>

                            <div class="ability-scores mb-3">
                                <h5>Ability Scores</h5>
                                <div class="row text-center">
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">STR</div>
                                            <div class="ability-value">@parsedMonster.Strength</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.StrengthModifier))</div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">DEX</div>
                                            <div class="ability-value">@parsedMonster.Dexterity</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.DexterityModifier))</div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">CON</div>
                                            <div class="ability-value">@parsedMonster.Constitution</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.ConstitutionModifier))</div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">INT</div>
                                            <div class="ability-value">@parsedMonster.Intelligence</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.IntelligenceModifier))</div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">WIS</div>
                                            <div class="ability-value">@parsedMonster.Wisdom</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.WisdomModifier))</div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="ability-score">
                                            <div class="ability-name">CHA</div>
                                            <div class="ability-value">@parsedMonster.Charisma</div>
                                            <div class="ability-modifier">(@FormatModifier(parsedMonster.CharismaModifier))</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (parsedMonster.SavingThrows.Any())
                            {
                                <div class="mb-2">
                                    <strong>Saving Throws:</strong> @string.Join(", ", parsedMonster.SavingThrows)
                                </div>
                            }

                            @if (parsedMonster.Skills.Any())
                            {
                                <div class="mb-2">
                                    <strong>Skills:</strong> @string.Join(", ", parsedMonster.Skills)
                                </div>
                            }

                            @if (parsedMonster.DamageVulnerabilities.Any())
                            {
                                <div class="mb-2">
                                    <strong>Damage Vulnerabilities:</strong> @string.Join(", ", parsedMonster.DamageVulnerabilities)
                                </div>
                            }

                            @if (parsedMonster.DamageResistances.Any())
                            {
                                <div class="mb-2">
                                    <strong>Damage Resistances:</strong> @string.Join(", ", parsedMonster.DamageResistances)
                                </div>
                            }

                            @if (parsedMonster.DamageImmunities.Any())
                            {
                                <div class="mb-2">
                                    <strong>Damage Immunities:</strong> @string.Join(", ", parsedMonster.DamageImmunities)
                                </div>
                            }

                            @if (parsedMonster.ConditionImmunities.Any())
                            {
                                <div class="mb-2">
                                    <strong>Condition Immunities:</strong> @string.Join(", ", parsedMonster.ConditionImmunities)
                                </div>
                            }

                            @if (parsedMonster.Senses.Any())
                            {
                                <div class="mb-2">
                                    <strong>Senses:</strong> @string.Join(", ", parsedMonster.Senses)
                                </div>
                            }

                            @if (parsedMonster.Languages.Any())
                            {
                                <div class="mb-2">
                                    <strong>Languages:</strong> @string.Join(", ", parsedMonster.Languages)
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(parsedMonster.ChallengeRating))
                            {
                                <div class="mb-2">
                                    <strong>Challenge:</strong> @parsedMonster.ChallengeRating
                                    @if (parsedMonster.ProficiencyBonus > 0)
                                    {
                                        <span class="text-muted">(Proficiency Bonus: +@parsedMonster.ProficiencyBonus)</span>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-dragon fa-3x mb-3"></i>
                            <p>Enter a monster statblock and click "Parse Statblock" to see the parsed data here.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .ability-score {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
        background-color: #f8f9fa;
    }

    .ability-name {
        font-weight: bold;
        font-size: 0.875rem;
        color: #6c757d;
    }

    .ability-value {
        font-size: 1.25rem;
        font-weight: bold;
        color: #212529;
    }

    .ability-modifier {
        font-size: 0.875rem;
        color: #6c757d;
    }

    .parsed-monster {
        max-height: 600px;
        overflow-y: auto;
    }

    .card {
        height: 700px;
    }

    .card-body {
        overflow-y: auto;
    }
</style>

@code {
    private string statblockText = "";
    private MonsterStatblock? parsedMonster;

    private void ParseStatblock()
    {
        if (!string.IsNullOrWhiteSpace(statblockText))
        {
            parsedMonster = ParserService.ParseStatblock(statblockText);
        }
    }

    private string FormatModifier(int modifier)
    {
        return modifier >= 0 ? $"+{modifier}" : modifier.ToString();
    }
}